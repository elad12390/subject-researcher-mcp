name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Generate changelog
      id: changelog
      run: |
        # Generate changelog from git history
        echo "## What's Changed" > CHANGELOG.md
        
        # Check if this is the first tag
        if git describe --tags --abbrev=0 HEAD^ 2>/dev/null; then
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^)
          git log --pretty=format:"- %s (%h)" $PREV_TAG..HEAD >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$PREV_TAG...${GITHUB_REF#refs/tags/}" >> CHANGELOG.md
        else
          echo "ðŸŽ‰ Initial release of Enhanced Subject Researcher MCP!" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "### Features" >> CHANGELOG.md
          echo "- Iterative target-driven research engine with 11-phase methodology" >> CHANGELOG.md
          echo "- Real web search integration with multiple source types" >> CHANGELOG.md
          echo "- Quality metrics tracking (coverage, recency, novelty, agreement)" >> CHANGELOG.md
          echo "- Sophisticated claim mining and credibility analysis" >> CHANGELOG.md
          echo "- Configurable research parameters and stop criteria" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "**Full Changelog**: https://github.com/${{ github.repository }}/commits/${GITHUB_REF#refs/tags/}" >> CHANGELOG.md
        fi
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ github.ref_name }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false

  # TODO: Add PyPI and Docker publishing when secrets are configured
  # publish-pypi:
  #   name: Publish to PyPI  
  #   runs-on: ubuntu-latest
  #   needs: create-release
  #   if: secrets.PYPI_API_TOKEN != ''
  
  # publish-docker:
  #   name: Publish Docker Image
  #   runs-on: ubuntu-latest  
  #   needs: create-release
  #   if: secrets.DOCKER_USERNAME != '' && secrets.DOCKER_PASSWORD != ''